@model Webtest2.user

@{
    IEnumerable<category> category = ViewData["Category"] as IEnumerable<category>;
    IEnumerable<item> items = ViewData["Items"] as IEnumerable<item>;
    ViewBag.Title = "Home";
    int count = 1;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var user = (user)ViewData["user"];
    List<cart> carts = new List<cart>();
    Function fs = new Function();

    if (Session["Cart"] != null)
    {
        carts = (List<cart>)Session["cart"];
    };
    var value = 8012.34m;
    var info = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");

}
@using System.Collections;

<div class="w3l_banner_nav_right">
    <!-- about -->
    <div class="privacy about">
        <h3>Chec<span>kout</span></h3>

        <div class="checkout-right">
            <h4>Your shopping cart contains: <span>@carts.Count() Products</span></h4>
            <table class="timetable_sub">
                <thead>
                    <tr>
                        <th>SL No.</th>
                        <th>Product</th>
                        <th>Quality</th>
                        <th>Product Name</th>

                        <th>Price</th>
                        <th>Remove</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in carts)
                    {
                        if (item.item != null)
                        {
                    <tr class="rem+@count">
                        <td class="invert">@count</td>
                        @if (item.item.image != null)
                        {
                            <input type="hidden" id="itemID" />
                            var base64 = Convert.ToBase64String(item.item.image);
                            var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                            <td class="invert-image">
                                <a href="@Url.Action("Singleitem", "Home", new { id = item.item.id })"><img title=" " alt=" " src="@imgsrc" class="img-responsive" /></a>
                            </td>
                        }

                        <td class="invert">
                            <div class="quantity">
                                <div class="quantity-select">
                                    <div class="entry value-minus">&nbsp;</div>
                                    <input type="hidden" id="dataID" data-id="@item.item.id" class="idContent" value="@item.item.id" />
                                    <div class="entry value" data-id="@item.item.id"><span >@item.quantity</span></div>
                                    <div class="entry value-plus active">&nbsp;</div>
                                </div>
                            </div>
                        </td>
                        <td class="invert">@item.item.name</td>

                        <td class="invert">
                            @String.Format(info, "{0:c}", item.item.pricePerUnit)
                        </td>
                        <td class="invert">
                            <div class="rem">
                                <div class="close1"> </div>
                            </div>

                        </td>
                    </tr>  
                        }
                        else
                        {
                            <tr class="rem+@count">
                                <td class="invert">@count</td>
                                @if (item.pet.image != null)
                                {
                                    var base64 = Convert.ToBase64String(item.pet.image);
                                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                    <td class="invert-image">
                                        <a href="@Url.Action("Singleitem", "Home", new { id = item.pet.id })"><img title=" " alt=" " src="@imgsrc" class="img-responsive" /></a>
                                    </td>
                                }

                            <td class="invert">
                                <div class="quantity">
                                    <div class="quantity-select">
                                        <div class="entry value-minus">&nbsp;</div>
                                        <input type="hidden" id="dataID" data-id="@item.pet.id" class="idContent" value="@item.pet.id" />
                                        <div class="entry value" data-id="@item.pet.id"><span>@item.quantity</span></div>
                                        <div class="entry value-plus active">&nbsp;</div>
                                    </div>
                                </div>
                            </td>
                                <td class="invert">@item.pet.name</td>

                                <td class="invert">
                                    @String.Format(info, "{0:c}", item.pet.price)
                                </td>
                                <td class="invert">
                                    <div class="rem">
                                        <div class="close1"> </div>
                                    </div>

                                </td>
                            </tr>
                        }
                        count++;
                    }

                </tbody>
            </table>
        </div>
        <div class="checkout-left">
            <div class="col-md-4 checkout-left-basket">
                <h4>Continue to basket</h4>
                <ul>
                    @foreach (var item in carts)
                    {
                        if (!item.itemorpet())
                        {
                            <li>@item.item.name <i>-</i> <span>@item.price() </span></li>
                        }
                    }
                    <li>Total <i>-</i> <span>  @String.Format(info, "{0:c}", fs.totalPrice(carts))</span></li>
                </ul>
            </div>
            <div class="col-md-8 address_form_agile">
                <h4>Delivery Detail</h4>
                @using (Html.BeginForm("Payment", "Home", FormMethod.Post, new { @class = "creditly-card-form agileinfo_form" }))
                {
                    <div class="form-group">

                        <label class="control-label" for="full_name">First Name </label>

                        <div class="input-wrap">
                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control", @Value = @user.first_name, @require="require"   } })
                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                            <span class="help-block"></span>
                        </div>

                        <label class="control-label" for="full_name">First Name </label>

                        <div class="input-wrap">
                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control", @Value = @user.last_name, @require="require" } })
                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                            <span class="help-block"></span>
                        </div>
                    </div>

                    <div class="form-group ">
                        <label class="control-label" for="phone_number">Phone Number</label>
                        <div class="input-wrap update-phone">
                            @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control", @Value = @user.phone_number, @require="require" } })
                            @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                            <span class="help-block"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label" for="address">Address</label>
                        <div class="input-wrap">
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @Value = @user.address, @require="require" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="city">City</label>
                        <div class="input-wrap">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", @Value = @user.city, @require="require" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-wrap margin">
                            <button type="submit" class="btn btn-info btn-block btn-update">Deliver to this address</button>
                        </div>
                    </div>

                }

            </div>

            <div class="clearfix"> </div>

        </div>

    </div>
    <!-- //about -->
</div>
<div class="clearfix"></div>
</div>
<!-- //banner -->
<!-- js -->
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<!--quantity-->
<script>
    $('.value-plus').on('click',  function () {
        var divUpd = $(this).parent().find('.value'), newVal = parseInt(divUpd.text(), 10) + 1;
        var idModel = divUpd.data('id');
        alert(idModel);       
        $.ajax({
            url: "/Cart/PlusQuantity",
            data: '{"id":"' + idModel +'"}',
            contentType: 'application/json; charset=utf-8',
            type: 'post',
            success: function (result) {
                if (result != "Failed") {

                    divUpd.text(result);
                }
                else if (result == "Failed") {
                    alert('Failed')
                }
            },
            error: function (result) {
                  alert('Fail')
            }
        });
    });

    $('.value-minus').on('click', function () {
        var divUpd = $(this).parent().find('.value'), newVal = parseInt(divUpd.text(), 10) - 1;
        var idModel = divUpd.data('id');
        $.ajax({
            url: "/Cart/MinusQuantity",
            data: '{"id":"' + idModel +'"}',
            contentType: 'application/json; charset=utf-8',
            type: 'post',
            success: function (result) {
                if (result != "Failed") {

                    divUpd.text(result);
                }
                else if (result == "Failed") {
                    alert('Failed')
                }
            },
            error: function (result) {
                  alert('Fail')
            }
        });
    });
    
    

</script>
<!--quantity-->
<script>
    $(document).ready(function (c) {
        $('.close1').on('click', function (c) {
            $('.rem1').fadeOut('slow', function (c) {
                $('.rem1').remove();
            });
        });
    });
</script>
<script>
    $(document).ready(function (c) {
        $('.close2').on('click', function (c) {
            $('.rem2').fadeOut('slow', function (c) {
                $('.rem2').remove();
            });
        });
    });
</script>
<script>
    $(document).ready(function (c) {
        $('.close3').on('click', function (c) {
            $('.rem3').fadeOut('slow', function (c) {
                $('.rem3').remove();
            });
        });
    });
</script>

